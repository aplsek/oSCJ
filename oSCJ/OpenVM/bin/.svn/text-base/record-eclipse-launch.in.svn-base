#!/bin/sh
# This script can be used as a replacement for java in shell scripts
# such as gen-ovm.  It captures the current directory and arguments to
# java, and writes the results in an Eclipse debug launch file.
# 
# This script is controlled by three environment variables
# WORKSPACE   is Eclipse's toplevel workspace directory, and is
#             defaulted just as in eclipse.
# PROJECT     is the base name of the project being debugged, and
#             defaults to the OpenVM source directory name.
# LAUNCH_NAME is the name of the configuration in the debug dialog
#             box, and defaults to the current directory name.
#
# The end result is a .launch file that in a format compatible with
# eclipse 3.2M6, and one that eclipse 3.2M6 will completely ignore.
default_workspace() {
    case `uname` in
	Darwin) echo "$HOME/Documents/workspace";;
	*)      echo "$HOME/workspace";;
    esac
}

default_project() {
    echo "@ECLIPSE_PROJECT@"
}

default_launch_name() {
    dir=`pwd`
    basename "$dir"
}

eclipse_quote() {
  (if echo "$1" | grep " " > /dev/null
  then echo "\"$1\""
  else echo "$1"
  fi) | sed -e 's/</\&lt;/g' -e 's/>/\&gt;/g' -e 's/"/\&quot;/g'
}

WORKSPACE="${WORKSPACE:-`default_workspace`}"
PROJECT="${PROJECT:-`default_project`}"

vm_args=""
args=""
main=""

done=no
while [ $done == "no" ]
do
    case "$1" in
	-*) quoted=`eclipse_quote "$1"`
	    vm_args="$vm_args $quoted";;
	*)  main="$1"
	    done=yes;;
    esac
    shift
done

while [ $# -ne 0 ]
do
    quoted=`eclipse_quote "$1"`
    args="$args $quoted"
    shift
done

args=`echo "$args" | sed 's/^ //'`
vm_args=`echo "$vm_args" | sed 's/^ //'`

LAUNCH_NAME="${LAUNCH_NAME:-`default_launch_name`}"
launch_file="$WORKSPACE/.metadata/.plugins/org.eclipse.debug.core/.launches/$LAUNCH_NAME.launch"

cat - > "$launch_file" <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="$main"/>
<stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="$args"/>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
<listEntry value="4"/>
</listAttribute>
<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="$PROJECT"/>
<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="$vm_args"/>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
<listEntry value="/$PROJECT"/>
</listAttribute>
<stringAttribute key="org.eclipse.jdt.launching.WORKING_DIRECTORY" value="`pwd`"/>
<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
</launchConfiguration>
EOF

echo "Created debug launch called $LAUNCH_NAME"
echo "(contents in $launch_file)"
