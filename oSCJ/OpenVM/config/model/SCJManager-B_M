## -model=SCJManager-B_M selects the SCJManager memory manager with scoped memory support, and the Ovm fast lock
##      implementation.  It must be used in combination with a
##      scope-aware thread manager (such as RealtimeJVM) 
##
##     
##   -scope-size defines the size of memory allocated for scopes and other
##   transient memory areas (default: same size as the heap);
-scope-size		"14m"

-heap-size "4m"

##   -disable-scope-checks suppresses IllegalAssignmentError and 
## 	MemoryAccessError generation.  Set this flag at your own peril.
-disable-scope-checks	"true"

# Add scope support to the context data structure.  
ovm.core.execution.Context$Factory	\
	ovm.core.services.memory.ScopedMemoryContext$Factory

ovm.core.services.memory.MemoryManager						\
 s3.services.memory.scj.SCJManager(heap-size,			\
						     scope-size,		\
						     disable-scope-checks)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Select the object model.  S3Model_B_Mf_F_H uses one word collocated with each
# object to store a blueprint reference, one to track monitor references, one
# to hold a forward address during collection, and one to hold the hash code
# (which can't be derived from the address after an object moves).  This is
# not a pleasingly space-efficient model.  But better ones can be implemented
# with the same functionality.
#
ovm.core.domain.ObjectModel		s3.core.domain.S3Model_B_M
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

ovm.core.services.memory.LocalReferenceIterator			\
	ovm.core.services.memory.NullLocalReferenceIterator

#%include "fast-lock"
