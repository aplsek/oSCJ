## -model=MostlyCopyingSC-B_M_F_H selects a varient of the mostly copying
## 	collector that can allocate certain VM internal objects "on
## 	the stack" but does not require a scope-aware thread manager.

# Maximum memory consumed by the immortal region.  Needed?
-immortal-size 		"4m"

# setting -disable-scope-checks to true suppresses IllegalAssignmentError and 
# MemoryAccessError generation.  Set this flag at your own peril.
-disable-scope-checks	"true"

# FIXME:  Should the following two options be in the usage message?
# The size of the per-thread memory area used to hold executive-domain 
# temperary data.
-scratch-pad-size 	"4k"

#   -total-scratch-pad-size
#       Number of bytes reserved for per-thread scratchpads, and other
#       non-heap memory areas
-total-scratch-pad-size		heap-size

ovm.core.services.memory.MemoryPolicy \
		ovm.core.services.memory.ScopedMemoryPolicy(scratch-pad-size)

# Add scope support to the context data structure.  
ovm.core.execution.Context$Factory	\
	ovm.core.services.memory.ScopedMemoryContext$Factory

# Provide a default memory policy that uses explicitly managed memory
# for efficency, but does not provide realtime guarentees
# ...
# Not sure about this.  What should the policy be?  Equate scratchpad
# with heap?
#ovm.core.services.memory.MemoryPolicy	\
#	ovm.core.services.memory.ScopedMemoryPolicy

ovm.core.services.memory.MemoryManager					       \
 s3.services.memory.mostlyCopying.SplitRegionManager(heap-size,		       \
						     immortal-size,	       \
						     total-scratch-pad-size,   \
						     disable-scope-checks)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Select the object model.  S3Model_B_M_F_H uses one word collocated with each
# object to store a blueprint reference, one to track monitor references, one
# to hold a forward address during collection, and one to hold the hash code
# (which can't be derived from the address after an object moves).  This is
# not a pleasingly space-efficient model.  But better ones can be implemented
# with the same functionality.
#
ovm.core.domain.ObjectModel		s3.core.domain.S3Model_B_M_F_H
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

ovm.core.services.memory.LocalReferenceIterator			\
	s3.services.memory.conservative.ConservativeLocalReferenceIterator
