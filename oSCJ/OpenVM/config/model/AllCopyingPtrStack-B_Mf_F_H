
# Precise stack walking with exception handlers and return address thunks

ovm.core.services.memory.MemoryManager  \
 s3.services.memory.mostlyCopying.Manager(heap-size)

ovm.core.services.memory.LocalReferenceIterator \
	s3.services.j2c.PtrStackLocalReferenceIterator("true")

# How can we get -DPRECISE_THUNK set from here?  We could generate a file 
# called precise_config.hh that contains a #define.  The value to define
# would be a second ctor parameter.

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Select the object model.  S3Model_B_M_F_H uses one word collocated with each
# object to store a blueprint reference, one to track monitor references, one
# to hold a forward address during collection, and one to hold the hash code
# (which can't be derived from the address after an object moves).  This is
# not a pleasingly space-efficient model.  But better ones can be implemented
# with the same functionality.
#
ovm.core.domain.ObjectModel		s3.core.domain.S3Model_B_Mf_F_H
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

%include "fast-lock"
