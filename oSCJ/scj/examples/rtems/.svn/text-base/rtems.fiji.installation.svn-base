1. Install rtems prebuilt tools.

- Browse http://www.rtems.org/ftp/pub/rtems/linux/4.10/suse/11.2/i586/
- Download and istall the following packages

rtems-4.9-autoconf-2.62-4.suse11.2.noarch.rpm       
rtems-4.9-automake-1.10.3-1.suse11.2.noarch.rpm     
rtems-4.9-binutils-common-2.19-3.suse11.2.i586.rpm  
rtems-4.9-gcc-common-4.3.2-24.suse11.2.i586.rpm     
rtems-4.9-gdb-common-6.8-11.suse11.2.noarch.rpm
rtems-4.9-newlib-common-1.16.0-24.suse11.2.i586.rpm
rtems-4.9-sparc-rtems4.9-binutils-2.19-3.suse11.2.i586.rpm
rtems-4.9-sparc-rtems4.9-gcc-4.3.2-24.suse11.2.i586.rpm
rtems-4.9-sparc-rtems4.9-gcc-c++-4.3.2-24.suse11.2.i586.rpm
rtems-4.9-sparc-rtems4.9-gcc-c++-4.3.2-24.suse11.2.i586.rpm
rtems-4.9-sparc-rtems4.9-gdb-6.8-11.suse11.2.i586.rpm
rtems-4.9-sparc-rtems4.9-newlib-1.16.0-24.suse11.2.i586.rpm

Notes:
- All the packages will be installed in /opt/rtems-4.9/ by default.
- During installation you can get some warnings about keys. Don't worry about them.
- During installation you can get some dependency errors. Find the required packages from suse repositories and install them.


2. Build rtems with leon3 support

- Become root
- Browse http://www.rtems.org/ftp/pub/rtems/4.9.3/
- Download rtems-4.9.3.tar.bz2
- Extract archive in the /opt/ directory. This will create /opt/rtems-4.9.3/

cd /opt/rtems-4.9.3/
export PATH=/opt/rtems-4.9/bin:$PATH
./bootstrap
mkdir bsis
cd bsis
../configure --target=sparc-rtems4.9 --enable-rtemsbsp=leon3 --enable-posix
make
make install


3. Build fiji with rtems support

- Unzip fivm.zip
- Do the following operations

cd FIJI_HOME
export PATH=/opt/rtems-4.9/bin:$PATH
./configure --target=sparc-rtems4.9 --with-rtems=/opt/rtems-4.9 --with-rtems-bsp=leon3
make

- Open FIJI_HOME/lib/targets/sparc-rtems4.9/fivmcrc
- Be sure you have the same lines as written below
  --sys-opt-cflags        " -O3 -fno-strict-aliasing -fno-optimize-sibling-calls -fomit-frame-pointer -falign-loops -fwrapv -fno-pic  -fno-pic -mcpu=v8 -msoft-float"
  --sys-ldflags           "-B/opt/rtems-4.9/sparc-rtems4.9/leon3/lib -specs bsp_specs -qrtems -m32 -msoft-float"

Notes:
- During build it can ask ruby support. Install ruby using "sudo zypper install ruby"


4. Build a sample Hello.java program with fiji

- Write and compile a Hello.java program.
- Create a jar file from the Hello.class file.
- Run the following command

fivm/bin/fivmc -o Hello Hello.jar --main Hello --target=sparc-rtems4.9 --g-def-max-mem=50M -v 1


5. Get GRMON

- Browse http://www.gaisler.com/cms/index.php?option=com_content&task=view&id=190&Itemid=124
- Download grmon-eval-1.1.39.tar.gz
- Extract archive


6. Get minicom and configure

- Run the following command

sudo zypper install minicom

- Open /etc/minirc.dfl
- Make sure you have the same lines as below
- Make sure you don't have a blank line at the end of the file

# Machine-generated file - use "minicom -s" to change parameters.
pu port             /dev/ttyUSB0
pu baudrate     38400
pu bits         8
pu parity       N
pu stopbits     1
pu minit
pu mreset
pu rtscts       No


7. Upload Hello and run it

- Make sure the board is connected to the computer and powered on
- Open a new terminal
- Run the following command

sudo minicom

- Return to previous terminal
- Go to the Hello directory
- Run the following commands

GRMON_HOME/linux/grmon-eval -usb
load Hello
run

- You should see the output in minicom interface


